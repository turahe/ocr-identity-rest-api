[tool.poetry]
name = "ocr-identity-rest-api"
version = "2.0.0"
description = "A modern, scalable REST API for OCR identity document processing with S3 storage, database metadata management, and background task processing using Celery."
authors = ["Nur Wachid <wachid@outlook.com>"]
readme = "README.md"
license = "MIT"
packages = [{include = "app"}]
keywords = ["ocr", "identity", "rest-api", "fastapi", "celery", "s3", "postgresql", "nlp", "spacy"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]

[tool.poetry.dependencies]
python = "^3.11"
# FastAPI and web framework
fastapi = "^0.115.12"
uvicorn = {extras = ["standard"], version = "^0.34.1"}
python-multipart = "^0.0.20"
starlette = "^0.46.2"

# Database and ORM
sqlalchemy = "^2.0.27"
asyncpg = "^0.29.0"
alembic = "^1.13.1"

# Redis and caching
redis = "^5.0.1"

# S3 and file storage
boto3 = "^1.34.0"

# Email
aiosmtplib = "^3.0.1"

# Configuration and environment
python-dotenv = "^1.0.0"
pydantic = "^2.11.3"
pydantic-settings = "^2.2.1"

# OCR and image processing
opencv-python = "^4.11.0.86"
pytesseract = "^0.3.13"
pillow = "^11.2.1"
numpy = "^1.24.0,<2.0.0"

# NLP and Text Processing
spacy = "^3.7.2"

# Background tasks
celery = "^5.3.4"
kombu = "^5.3.4"
billiard = "^4.2.0"

# Production server
gunicorn = "^21.2.0"

# Development and debugging
debugpy = "^1.8.14"

# Utilities
python-slugify = "^8.0.4"
text-unidecode = "^1.3"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-watch = "^4.2.0"

# Code quality
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"

# Type checking
typing-extensions = "^4.13.2"
typing-inspection = "^0.4.0"

# Development tools
requests = "^2.31.0"

[tool.poetry.group.docs.dependencies]
# Documentation
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.8"

[tool.poetry.scripts]
# CLI commands
start-app = "main:main"
start-worker = "scripts.start_celery_worker:main"
setup-minio = "scripts.setup_minio:main"
migrate = "scripts.migrate:main"
test-upload = "test_upload:main"
download-spacy-models = "scripts.download_spacy_models:main"

[tool.poetry.urls]
"Homepage" = "https://github.com/yourusername/ocr-identity-rest-api"
"Repository" = "https://github.com/yourusername/ocr-identity-rest-api"
"Documentation" = "https://github.com/yourusername/ocr-identity-rest-api#readme"
"Bug Tracker" = "https://github.com/yourusername/ocr-identity-rest-api/issues"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]
known_third_party = ["fastapi", "sqlalchemy", "celery", "boto3", "spacy"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "cv2.*",
    "PIL.*",
    "pytesseract.*",
    "spacy.*",
    "thinc.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov" 